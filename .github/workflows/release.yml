on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

name: Release Build

jobs:
  build:
    runs-on: windows-2022
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: checkout powershell-yaml
        uses: actions/checkout@v4
        with:
          repository: cloudbase/powershell-yaml
          path: powershell-yaml

      # - id: tagName
      #   name: Get tag name
      #   uses: olegtarasov/get-tag@v2.1.4
      #   #puts the tag name in $env:GIT_TAG_NAME

      # - id: projectselection
      #   name: Set build and test projects by tag
      #   run: ./publish/Get-ReleaseData.ps1 $env:GIT_TAG_NAME
        #outputs projects, testprojects, releasetitle, newrelease (boolean), releasetag
        #also writes release notes to ./publish/release_notes.txt

      - name: Nuget Restore
        run: nuget restore .\GsPlugin.sln

      - name: Build entire solution (.NET Framework 4.6.2)
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\GsPlugin.sln -p:Configuration=Release -restore -clp:ErrorsOnly

      - name: Setup Playnite
        run: |
          Invoke-WebRequest -Uri "https://github.com/JosefNemec/Playnite/releases/download/10.34/Playnite1034.zip" -OutFile "$Env:GITHUB_WORKSPACE\Playnite.zip"
          Expand-Archive "$Env:GITHUB_WORKSPACE\Playnite.zip" -DestinationPath "$Env:GITHUB_WORKSPACE\Playnite"

      - name: Pack with Playnite
        run: |
          mkdir "PackingOutput"
          & "$Env:GITHUB_WORKSPACE\Playnite\Toolbox.exe" pack "$Env:GITHUB_WORKSPACE\bin\Release" "$Env:GITHUB_WORKSPACE\PackingOutput"
          Get-ChildItem "$Env:GITHUB_WORKSPACE\PackingOutput" -Filter *.pext | Rename-Item -NewName ("GsPlugin_" + "${{ github.ref_name }}".Replace("/", "_") + ".pext")
          Move-Item -Path "$Env:GITHUB_WORKSPACE\PackingOutput\*.pext" -Destination $Env:GITHUB_WORKSPACE

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body_path: ./publish/release_notes.txt
          draft: false
          prerelease: false
          files: GsPlugin_${{ github.ref_name }}.Replace("/", "_").pext
