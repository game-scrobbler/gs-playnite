on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

name: Release Build

jobs:
  build:
    runs-on: windows-2022
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout powershell-yaml
        uses: actions/checkout@v4
        with:
          repository: cloudbase/powershell-yaml
          path: powershell-yaml

      - name: NuGet Restore
        run: nuget restore .\GsPlugin.sln

      - name: Verify Code Formatting
        run: |
          echo "Running code formatting checks..."
          dotnet format .\GsPlugin.sln  --verify-no-changes
        continue-on-error: false

      - name: Build Entire Solution (.NET Framework 4.6.2)
        run: |
          cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\"
          .\MSBuild.exe $Env:GITHUB_WORKSPACE\GsPlugin.sln -p:Configuration=Release -restore -clp:ErrorsOnly

      - name: Setup Playnite
        run: |
          Invoke-WebRequest -Uri "https://github.com/JosefNemec/Playnite/releases/download/10.34/Playnite1034.zip" -OutFile "$Env:GITHUB_WORKSPACE\Playnite.zip"
          Expand-Archive "$Env:GITHUB_WORKSPACE\Playnite.zip" -DestinationPath "$Env:GITHUB_WORKSPACE\Playnite"

      - name: Pack with Playnite
        id: pack
        run: |
          mkdir "PackingOutput"
          & "$Env:GITHUB_WORKSPACE\Playnite\Toolbox.exe" pack "$Env:GITHUB_WORKSPACE\bin\Release" "$Env:GITHUB_WORKSPACE\PackingOutput"
          Get-ChildItem "$Env:GITHUB_WORKSPACE\PackingOutput" -Filter *.pext | Rename-Item -NewName ("GsPlugin_" + "${{ github.ref_name }}".Replace("/", "_") + ".pext")
          Move-Item -Path "$Env:GITHUB_WORKSPACE\PackingOutput\*.pext" -Destination $Env:GITHUB_WORKSPACE

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main'
        id: release
        uses: googleapis/release-please-action@v4
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

      - name: Create Sentry Release
        if: ${{ steps.release.outputs.release_created }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: game-scrobbler
          SENTRY_PROJECT: gs-playnite
        run: |
          npm install -g @sentry/cli
          $version = "${{ steps.release.outputs.tag_name }}".TrimStart('v')
          sentry-cli releases new "GsPlugin@$version"
          sentry-cli releases set-commits "GsPlugin@$version" --auto
          sentry-cli upload-dif --type=portablepdb "$Env:GITHUB_WORKSPACE\bin\Release" --log-level=info
          sentry-cli releases finalize "GsPlugin@$version"

      - name: Rename Packed File Name to Release Tag
        if: github.ref == 'refs/heads/main'
        id: rename
        run: |
          Get-ChildItem "$Env:GITHUB_WORKSPACE" -Filter *.pext | Rename-Item -NewName ("${{ steps.release.outputs.tag_name }}".Replace("/", "_") + ".pext")

      - name: Upload Release Artifact
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} .\${{ steps.release.outputs.tag_name }}.pext
